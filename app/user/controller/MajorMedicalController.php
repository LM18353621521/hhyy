<?php
// +----------------------------------------------------------------------
// | bronet [ 以客户为中心 以奋斗者为本 ]
// +----------------------------------------------------------------------
// | Copyright (c) 2013-2017 http://www.bronet.cn All rights reserved.
// +----------------------------------------------------------------------
// | Licensed ( http://www.apache.org/licenses/LICENSE-2.0 )
// +----------------------------------------------------------------------
// | Author: Powerless < wzxaini9@gmail.com>
// +----------------------------------------------------------------------

namespace app\user\controller;

use cmf\controller\AdminBaseController;
use think\Db;

error_reporting(E_ERROR | E_PARSE);

/**
 * 患者主要病史及症状管理
 * Class MedicalHistoryController
 * @package app\user\controller
 */
class MajorMedicalController extends AdminBaseController
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $user_id = input('user_id');
        $user = Db::name('user')->find($user_id);
        $this->user = $user;
        $this->admin_id = session('ADMIN_ID');

        $items_list = array(
            '1' => array('name' => '波动性认知障碍', 'unit' => '*109/L'),
            '2' => array('name' => '视幻觉', 'unit' => 'g/L'),
            '3' => array('name' => '快速动眼期睡眠行为障碍', 'unit' => '*1012/L'),
            '4' => array('name' => '帕金森综合征', 'unit' => 'mmol/L'),
            '5' => array('name' => '对抗精神病类药物过敏', 'unit' => 'mmol/L'),
            '6' => array('name' => '姿势不稳', 'unit' => 'mmol/L'),
            '7' => array('name' => '反复跌倒', 'unit' => 'mmol/L'),
            '8' => array('name' => '晕厥或短暂发作无法解释的意识丧失', 'unit' => 'mmol/L'),
            '9' => array('name' => '严重的自主神经功能障碍（如便秘、体位性低血压、尿失禁）', 'unit' => 'ng/ml'),
            '10' => array('name' => '嗅觉减退', 'unit' => 'pg/ml'),
            '11' => array('name' => '过度嗜睡', 'unit' => ' ng/ml'),
            '12' => array('name' => '其它形式的幻觉', 'unit' => 'mmol/L'),
            '13' => array('name' => '系统性妄想', 'unit' => 'mmol/L'),
            '14' => array('name' => '淡漠、抑郁或焦虑', 'unit' => 'mmol/L'),
        );
        $this->assign('items_list',$items_list);


        $this->assign('user', $user);
    }

    /**
     * 数据列表
     * @return mixed
     */
    public function index()
    {
        $request = input('request.');
        if (!empty($request['user_nickname'])) {
            $where['user_nickname'] = ['like', "%" . $request['user_nickname'] . "%"];
        }
        if (!empty($request['title'])) {
            $where['a.title'] = $request['title'];
        }
        if (!empty($request['start_time']) && !empty($request['end_time'])) {
            $start_time = strtotime($request['start_time']);
            $end_time = strtotime($request['end_time']) + 86400;
            $where['a.create_time'] = array('between', [$start_time, $end_time]);
        }
        $where['a.user_id'] = input('user_id');

        $keywordComplex = [];
        $usersQuery = Db::name('user_major_medical');

        $list = $usersQuery
            ->alias('a')
            ->join('user_visit v','a.visit_id=v.id','left')
            ->field("a.*,v.visit_time,v.visit_times")
            ->whereOr($keywordComplex)->where($where)->order("a.create_time DESC")->paginate(15);
        // 获取分页显示
        $list->appends($request);
        $page = $list->render();
        $this->assign('list', $list);
        $this->assign('page', $page);
        // 渲染模板输出
        return $this->fetch();
    }

    /**
     * 添加数据
     * @adminMenu(
     *     'name'   => '添加文章',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> true,
     *     'order'  => 10000,
     *     'icon'   => '',
     *     'remark' => '添加文章',
     *     'param'  => ''
     * )
     */
    public function add()
    {
        return $this->fetch();
    }

    /**
     * 添加/编辑数据提交
     * @adminMenu(
     *     'name'   => '添加文章提交',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  => 10000,
     *     'icon'   => '',
     *     'remark' => '添加文章提交',
     *     'param'  => ''
     * )
     */
    public function addPost()
    {
        $model = Db::name('user_major_medical');
        if ($this->request->isPost()) {
            $data = $this->request->param();

            foreach ($data as &$val) {
                if (is_array($val)) {
                    $val = serialize($val);
                }
            }
            $data['update_time'] = time();
            if (empty($data['id'])) {
                $data['admin_id'] = $this->admin_id;
                $data['create_time'] = time();
                $res = $model->insert($data);
                adminLog("添加主要病史及症状(ID:$res)");
                $this->success('添加成功!', url('MajorMedical/index', ['user_id' => $data['user_id']]));
            } else {
                $res = $model->where(array('id' => $data['id']))->update($data);
                adminLog("编辑主要病史及症状(ID:" . $data['id'] . ")");
                $this->success('编辑成功!', url('MajorMedical/index', ['user_id' => $data['user_id']]));
            }
        }

    }

    /**
     * @return mixed编辑数据
     */
    public function edit()
    {
        $model = Db::name('user_major_medical');
        $id = $this->request->param('id', 0, 'intval');
        $data = $model->find($id);

        $data['items'] = unserialize($data['items']);
        $this->assign('data', $data);
        return $this->fetch();
    }

    /**
     * 删除数据
     * @throws \think\Exception
     */
    public function delete()
    {
        $model = Db::name('user_major_medical');
        $param = $this->request->param();
        if (isset($param['id'])) {
            $id = $this->request->param('id', 0, 'intval');
            $result = $model->where(['id' => $id])->find();
            $model->where(['id' => $id])->delete();
            adminLog("删除主要病史及症状(ID:" . $id . ")");
            $this->success("删除成功！", '');
        }
        if (isset($param['ids'])) {
            $ids = $this->request->param('ids/a');
            $result = $model->where(['id' => ['in', $ids]])->delete();
            adminLog("删除主要病史及症状(ID:" . implode(",", $ids) . ")");
            if ($result) {
                $this->success("删除成功！", '');
            }
        }
    }
}
